import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'org.jetbrains.kotlin.jvm' version "1.5.10"
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
    id 'com.dorongold.task-tree' version '2.1.0'
}

group 'xyz.theprogramsrc'
version '0.1.1-SNAPSHOT'
description 'The best way to create a plugin'

repositories {
    mavenLocal()
    mavenCentral()

    maven { url 'https://repo.theprogramsrc.xyz/repository/maven-public/' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://oss.sonatype.org/content/repositories/releases/' }
    maven { url 'https://oss.sonatype.org/content/groups/public/' }
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url 'https://repo.codemc.org/repository/maven-public' }
    maven { url 'https://repo.codemc.org/repository/nms' }
    maven { url 'https://jitpack.io' }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.17.1-R0.1-SNAPSHOT'
    compileOnly 'org.spigotmc:spigot:1.16.5-R0.1-SNAPSHOT'
    compileOnly 'net.md-5:bungeecord-api:1.17-R0.1-SNAPSHOT'

    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.5.10'
    implementation 'org.jetbrains:annotations:23.0.0'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'net.lingala.zip4j:zip4j:2.9.1'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
}

test {
    useJUnitPlatform()
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withJavadocJar()
    withSourcesJar()
}

processResources {
    filter ReplaceTokens, tokens: [name: rootProject.name, version: project.version.toString(), description: project.description]
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    failOnError false
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

tasks.withType(Copy) {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    exclude 'META-INF/**'
}

tasks.withType(Jar) {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    exclude 'META-INF/**'
}

shadowJar {
    relocate 'com.google', 'xyz.theprogramsrc.simplecoreapi.libs.google'
    relocate 'org.apache.commons', 'xyz.theprogramsrc.simplecoreapi.libs.apache.commons'
    relocate 'org.checkerframework', 'xyz.theprogramsrc.simplecoreapi.libs.checkerframework'
    relocate 'org.intellij', 'xyz.theprogramsrc.simplecoreapi.libs.intellij'
    relocate 'org.jetbrains', 'xyz.theprogramsrc.simplecoreapi.libs.jetbrains'
    relocate 'javax.annotation', 'xyz.theprogramsrc.simplecoreapi.libs.annotation'
    relocate 'net.lingala.zip4j', 'xyz.theprogramsrc.simplecoreapi.libs.zip4j'

    archiveBaseName.set('SimpleCoreAPI')
    archiveClassifier.set('')
}

configurations {
    testImplementation {
        extendsFrom(compileOnly)
    }
}

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
    main.resources.srcDirs += 'src/main/resources'
}

publishing {
    repositories {
        maven {
            name = 'TheProgramSrc'
            credentials.username = System.getenv('NEXUS_USERNAME')
            credentials.password = System.getenv('NEXUS_PASSWORD')
            url = uri(version.contains('-SNAPSHOT') ? 'https://repo.theprogramsrc.xyz/repository/maven-snapshots/' : 'https://repo.theprogramsrc.xyz/repository/maven-releases/')
        }
        maven {
            name = 'GitHubPackages'
            url = 'https://maven.pkg.github.com/TheProgramSrc/SimpleCoreAPI'
            credentials {
                username = System.getenv('GITHUB_ACTOR')
                password = System.getenv('GITHUB_TOKEN')
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'simplecoreapi'

            from components.java

            pom.withXml {
                asNode().appendNode('packaging', 'jar')
                asNode().appendNode('name', 'SimpleCoreAPI')
                asNode().appendNode('description', project.description)
                asNode().appendNode('url', 'https://github.com/TheProgramSrc/SimpleCoreAPI')
                asNode().remove(asNode().get('dependencies'))

                def dependenciesNode = asNode().appendNode('dependencies')
                def jetbrainsAnnotations = dependenciesNode.appendNode('dependency')
                jetbrainsAnnotations.appendNode('groupId', 'org.jetbrains')
                jetbrainsAnnotations.appendNode('artifactId', 'annotations')
                jetbrainsAnnotations.appendNode('version', '23.0.0')
            }
        }
    }
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

publish.dependsOn clean, test, jar, shadowJar